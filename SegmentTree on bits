
void init(vector<int>& t){
  int n = size(t) >> 1;
  for(int i = n - 1; i > 0; i--) t[i] = t[i << 1] + t[(i << 1) ^ 1];
}

int sum(vector<int>& t, int l, int r) { //excluded r
  int n = size(t) >> 1;
  int res = 0;
  for(l += n, r += n; l < r; l >>= 1, r >>= 1){
  if(l & 1) res += t[l++];
  if(r & 1) res += t[--r];
  }
  return res;
}

void change(vector<int>& t, int v, int val){
  int n = size(t) >> 1;
  for(t[v += n] = Value; v > 0; v >>= 1) t[v >> 1] = t[v] + t[v^1];
}

void add(vector<int>& t, int v, int delta){
  int n = size(t) >> 1;
  for(v += n; v > 0; v >>= 1) t[v] += delta; 

}
void solve(){
  int n = 10;
  vector<int> t(2 * n, 0);
  for(int i = 0; i < n; i++) cin >> t[i + n]; 
  init(t);
}

int main(){
  solve();
  return 0;
}
